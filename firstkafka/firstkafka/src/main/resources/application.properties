spring.kafka.bootstrap-server=localhost:9092
# 카프카서버 정보, 기본적으로 9092 포트를 사용한다.
spring.kafka.consumer.group-id=psk-test
# 컨슈머의 그룹 id
spring.kafka.consumer.enable-auto-commit=true
# 데이터를 어디까지 읽었다는 offset을 주시적으로 저장할 지 여부
spring.kafka.consumer.auto-offset-reset=latest
# offset에 오류가 있을 경우 어디서부터 다시 할지 여부
# ealiest : 맨처음부터 다시 읽는다.
# lastest : 이전꺼는 무시하고, 이제부터 들어오는 데이터부터 읽기 시작한다.
spring.kafka.producer.key-serializer=org.apache.common.StringSerializer
# 데이터를 kafka로 전달할 때 사용하는 Key Encoder Class
# StringSerializer는 문자열 형태의 데이터에만 사용가능
spring.kafka.consumer.key-deserializer=org.apache.common.StringDeserializer
# 데이터를 kafka에서 받아서 사용하는 Key Decoder Class
# StringDeseializer는 문자열 형태의 데이터에만 사용 가능
spring.kafka.producer.value-serializer=org.apache.common.StringSerializer
# 데이터를 kafka로 전달할 때 사용하는 Value Encoder Class
# StringSerializer는 문자열 형태의 데이터에만 사용가능
spring.kafka.consumer.value-deserializer=org.apache.common.StringDeserializer
# 데이터를 kafka에서 받아서 사용하는 Value Decoder Class
# StringDeseializer는 문자열 형태의 데이터에만 사용 가능
spring.kafka.consumer.max-poll-records=1000
# consumer가 한번에 가져오는 message 갯수
spring.kafka.template.default-topic=psk-test
# 기본 설정 topic name